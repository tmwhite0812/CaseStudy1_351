%% Filter Creation 

tau = 15*10^(-6) * 2*pi; % cutoff freq of around 10 kHz
tau2 = 60*10^(-6) * 2*pi; % cutoff freq of around 2.5 kHz
tau3 = 300.678*10^(-6) * 2*pi; %Cutoff freq of around 500 Hz
tau4 = 800*10^(-6) * 2*pi; %Cutoff Frequency of around 200 Hz
tau5 = 2.6*10^(-3) * 2*pi; %Cutoff Frequency of around 60 Hz


a = [1, 1/tau];  % Coefficients obtained from CT equation of HP and LP filter
b = 1/tau;  % Low Pass

a_2 = [1, 1/tau];
b_2 = [1,0]; % High Pass

a_3 = [1, 1/tau2];  % Coefficients obtained from CT equation of HP and LP filter
b_3 = 1/tau2;  % Low Pass

a_4 = [1, 1/tau2];
b_4 = [1,0]; % High Pass

a_5 = [1, 1/tau3];  % Coefficients obtained from CT equation of HP and LP filter
b_5 = 1/tau3;  % Low Pass

a_6 = [1, 1/tau3];
b_6 = [1,0]; % High Pass

a_7 = [1, 1/tau4];  % Coefficients obtained from CT equation of HP and LP filter
b_7 = 1/tau4;  % Low Pass

a_8 = [1, 1/tau4];
b_8 = [1,0]; % High Pass

a_9 = [1, 1/tau5];  % Coefficients obtained from CT equation of HP and LP filter
b_9 = 1/tau5;  % Low Pass

a_0 = [1, 1/tau5];
b_0 = [1,0]; % High Pass


% cutoff frequency of 10 kHZ
sys = tf(b, a); % Low Pass
sys2 = tf(b_2, a_2); % High Pass

% cutoff frequency of 2.5 kHZ
sys3 = tf(b_3, a_3); % Low Pass 
sys4 = tf(b_4, a_4); % High Pass

% cutoff frequency of 500 HZ
%sys5 = tf(b, a); % Low Pass
%sys6 = tf(b_2, a_2); % High Pass
sys5 = tf(b_5, a_5);
sys6 = tf(b_6, a_6);
% cutoff frequency of 200 HZ
%sys7 = tf(b, a); % Low Pass
%sys8 = tf(b_2, a_2); % High Pass
sys7 = tf(b_7, a_7);
sys8 = tf(b_8, a_8);
% cutoff frequency of 60 HZ
%sys9 = tf(b, a); % Low Pass
%sys0 = tf(b_2, a_2); % High Pass
sys9 = tf(b_9, a_9); % Low Pass
sys0 = tf(b_0, a_0); % High Pass
%% Giant Steps
[m,samp] = audioread("Giant Steps Bass Cut.wav");
t = (0:length(m)-1) * 1/samp;

figure
plot(t,m), title("Orginal Audio Waveform");
ylabel("Amplitude")
xlabel("Time (seconds)")

X = fft(m);
f = (0:length(m)-1)* samp/length(m);

bass_boost = lsim(10*(sys3)^3, m(:,1), t);
treble_dampen = lsim(0.3*(sys2), m(:,1), t);
bass_boost = (bass_boost+treble_dampen)/2;
clear = lsim(10*(sys2), bass_boost, t); % Helps get rid of the extra booming effects




x2 = fft(bass_boost);

figure
plot(t,clear), title("Filtered Waveform")
ylabel("Amplitude")
xlabel("Time (seconds)")

figure
subplot(3,1,1)
plot(f(1:length(f)/2),abs(X(1:length(f)/2))),title("Fs coeff. of Giant")
xlabel('f, Hz')
ylabel('|X(f)|')

subplot(3,1,2)
plot(f(1:length(f)/2),abs(x2(1:length(f)/2))),title("Fs coeff. of Giant (bass boosted)")
xlabel('f, Hz')
ylabel('|X(f)|')

subplot(3,1,3)
plot(f(1:length(f)/2),abs(clear(1:length(f)/2))),title("Fs coeff. of Giant (Clear)")
xlabel('f, Hz')
ylabel('|X(f)|')

%% Original Audio
%sound(m,samp);

%% Bass Boosted
sound(bass_boost,samp) % Can hear bass better with headphones/earphones on

%% Space Station 
[m, samp] = audioread("Space Station - Treble Cut.wav");
t = (0:length(m)-1) * 1/samp;

figure
plot(t,m(:,1)), title("Orginal Audio Waveform");
ylabel("Amplitude")
xlabel("Time (seconds)")

X = fft(m);
f = (0:length(m)-1)* samp/length(m);

treble = lsim(2*(sys2)^2,m(:,1), t);

x2 = fft(treble);

figure
plot(t,treble), title("Orginal Audio Waveform");
ylabel("Amplitude")
xlabel("Time (seconds)")


figure
subplot(2,1,1)
plot(f(1:length(f)/2),abs(X(1:length(f)/2))),title("Fs coeff. of Space")
xlabel('f, Hz')
ylabel('|X(f)|')

subplot(2,1,2)
plot(f(1:length(f)/2),abs(x2(1:length(f)/2))),title("Fs coeff. of Space treble")
xlabel('f, Hz')
ylabel('|X(f)|')


%% Orginal Space
%sound(m,samp);


%% Treble Space
%sound(treble,samp);
