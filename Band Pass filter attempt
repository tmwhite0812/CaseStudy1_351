%% Filter Creation 

tau = 30.678*10^(-6) * 2*pi; % cutoff freq of 5 kHz
tau2 = 60*10^(-6) * 2*pi; % cutoff freq of 2.5 kHz

a = [1, 1/tau];  % Coefficients obtained from CT equation of HP and LP filter
b = 1/tau;  % Low Pass

a_2 = [1, 1/tau];
b_2 = [1,0]; % High Pass

a_3 = [1, 1/tau2];  % Coefficients obtained from CT equation of HP and LP filter
b_3 = 1/tau2;  % Low Pass

a_4 = [1, 1/tau2];
b_4 = [1,0]; % High Pass


sys = tf(b, a); % Low Pass
sys2 = tf(b_2, a_2); % High Pass



% cutoff frequency of 2500 HZ
sys3 = tf(b_3, a_3); % Low Pass 
sys4 = tf(b_4, a_4); % High Pass

%% Piano_Noisy
[m, samp] = audioread("piano_noisy.wav");
t = (0:length(m)-1)*1/samp; % Stolen from Demo script 

figure
plot(t, m),title("Waveform of of Piano-noisy")
ylabel("Amplitude")
xlabel("Time t (seconds)")

% FFT coefficients
f = [0:length(m)-1]*samp/length(m);
X = fft(m); 

% Filter
test = lsim((sys4)^10, m, t); % First passing through HP 10 times

test = lsim(8*(sys)^2,test,t); % Ten passing through LP 2 times with amp * 8

figure, plot(t, test), title("Filtered Waveform");
ylabel("Amplitude")
xlabel("Time t (seconds)")

filtX = fft(test);

figure 
subplot(2,1,1)
plot(f(1:length(f)/2),abs(X(1:length(f)/2))), title("Unfiltered Coeff.")

% Only did half because ffts are symmetric and we can't hear the higher
% freq anyway 

xlabel('f, Hz')
ylabel('|X(f)|')

subplot(2,1,2)
plot(f(1:length(f)/2),abs(filtX(1:length(f)/2))), title("filtered Coeff.")
xlabel('f, Hz')
ylabel('|X(f)|')

%% Original
sound(m,samp);

%% Filtered 
sound(test,samp);
